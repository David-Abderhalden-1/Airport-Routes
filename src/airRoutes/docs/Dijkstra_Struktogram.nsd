<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.30-11" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="David" created="2021-11-10" changedby="David" changed="2021-11-10" origin="Structorizer 3.30-11" text="&#34;Dijkstra_Struktogram&#34;" comment="" color="ffffff" type="sub" style="nice">
	<children>
		<instruction text="&#34;Variablen und Konstanten Deklaration:&#34;,&#34;&#34;,&#34;checkedVertex als HashMap aus Key: Airport / Value: QueueBucket&#34;,&#34;queue als PriorityQueue aus QueueBucket&#34;,&#34;currentVertex als QueueBucket mit Wert = vertex: Abflug / weigth: 0 / lastVertex: NULL&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;queue hinzufügen: currentVertex &#34;" comment="&#34;Erste Runde manuell&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<while text="&#34;WÄHREND ( vertex von currentVertex != Ankunft )&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qWhile>
				<instruction text="&#34;Entferne erstes Element der queue&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;checkedVertex hinzufügen: vertex von currentVertex &amp; currentVertex&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;Variablen und Konstanten Deklaration:&#34;,&#34;&#34;,&#34;finalCurrentVertex als QueueBucket mit Wert currentVertex&#34;,&#34;edges als Map aus Key: Airport / Value Double mit Wert: value von vertex von currentVertex aus graph&#34;" comment="&#34;Lambda Funktion benötigt eine Konstante&#34;,&#34;graph: Klassen attribut Map aus Key: Airport / Value Map aus Key: Airport / Value Double&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<for text="&#34;FÜR JEDES Key, Value in edges&#34;" comment="&#34;Key: Airport / Value: Double&#34;" counterVar="FÜR JEDES Key, Value" startValue="" stepConst="" style="FREETEXT" color="ffffff" disabled="0">
					<qFor>
						<alternative text="&#34;WENN checkedVertex NICHT beinhaltet: Key&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
							<qTrue>
								<try text="&#34;QueueBucket mit vertex = Key nicht in queue enthalten&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
									<qTry>
										<instruction text="&#34;Variable Deklaration:&#34;,&#34;&#34;,&#34;bucket als QueueBucket mit Wert von queue filter (QueueBucket mit vertex = Key)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
										<alternative text="&#34;WENN route Länge von finalCurrentVertex + Value &#60;  route Länge von bucket&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
											<qTrue>
												<instruction text="&#34;bucket route Länge: route Länge von finalCurrentVertex + Value&#34;,&#34;bucket lastVertex: vertex von finalCurrentVertex&#34;" comment="&#34;Neuer Pfad (alter überschreiben)&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
											</qTrue>
											<qFalse color="ffffff">
											</qFalse>
										</alternative>
									</qTry>
									<qCatch>
										<instruction text="&#34;queue hinzufügen: QueueBucket mit &#34;,&#34;&#34;,&#34;                    vertex: Key&#34;,&#34;                    weigth: Value + route Länge von finalCurrentVertex &#34;,&#34;                    lastVertex: vertex von finalCurrentVertex&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
									</qCatch>
									<qFinally>
										<instruction text="&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
									</qFinally>
								</try>
							</qTrue>
							<qFalse color="ffffff">
							</qFalse>
						</alternative>
					</qFor>
				</for>
				<instruction text="&#34;currentVertex: kopiere erster aus queue&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qWhile>
		</while>
	</children>
</root>